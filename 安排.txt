🗓️ 每日详细任务清单（三人并行）
📍 第一阶段：基础奠基 (第1-7天) - 熟悉战场
目标：所有人熟悉板子和工具，跑通第一个Demo。

时间	H哥 (HLS)	                                         V姐 (Vivado)	                                  P兄 (Python)
第1-2天	安装Vitis HLS。学习HLS基础语法。	                安装Vivado。学习创建工程。	                      给SD卡烧录PYNQ镜像。学习Jupyter Notebook。
第3天	用LLM生成一个简单的数组求和HLS代码，并完成C仿真。	    在Vivado中创建一个空工程，熟悉界面。	              在Jupyter里写Python，控制板载LED灯闪烁。  （必做！）
第4-5天	学习#pragma HLS PIPELINE。尝试写一个3x3的卷积核。	学习Block Design，添加Zynq处理器和AXI GPIO。	    用OpenCV调用USB摄像头，并显示实时画面。    （必做！）
第6-7天	全员联调1：H哥提供一个简单的加法器IP，              V姐集成到Vivado并生成比特流，                    P兄在Python里调用这个IP完成加法计算。      （这一步通了，后面就顺了！）	

📍 第二阶段：核心攻坚 (第8-25天) - 核心输出
目标：完成图像预处理加速链（Sobel、二值化、矩形检测）。

时间	            H哥 (HLS)  	                                                      V姐 (Vivado)	                                                          P兄 (Python)
第8-12天	任务1：Sobel边缘检测。用LLM生成HLS代码，优化流水线。完成C仿真，导出IP。	      搭建Vivado工程：Zynq + AXI DMA + HLS Sobel IP。生成比特流，导出到PYNQ。	  写Python程序：通过DMA发送图像给PL端，并接收处理后的图像，用OpenCV显示出来。
第13-18天	任务2：二值化。实现Otsu阈值算法的HLS版本（LLM辅助），导出IP。	                在Vivado工程中并入二值化IP，用AXI Stream连接两个IP。生成新比特流。	        修改Python程序，测试完整的预处理流水线（原图->Sobel->二值化）。
第19-25天	任务3：矩形识别。研究用HLS实现轮廓查找(findContours)。（难点）	              将矩形识别IP集成进系统，调试数据流。（资源可能紧张，做好优化）	              Python端接收矩形坐标，并在原图上画出框，显示最终效果。

📍 第三阶段：集成扩展 (第26-35天) - 锦上添花
目标：实现面单校正和文字识别。

时间	任务	负责人
第26-30天	透视校正：在Python端（PS端）实现，利用H哥传来的矩形四个点坐标，用OpenCV的warpPerspective函数拉正面单。	P兄主导
第31-35天	OCR识别：在Python中调用Tesseract库，对校正后的面单图像进行文字识别。将识别结果通过串口打印或点亮不同的LED灯指示。	P兄主导，全员测试
📍 第四阶段：收尾答辩 (第36-40天) - polish
目标：优化、写报告、准备答辩。

时间	任务	负责人
第36-40天	1. 性能优化：测试FPS，优化HLS代码资源占用（LLM辅助）。
2. 写报告：三人分章节，H哥写HLS优化，V姐写系统集成，P兄写软件和演示。LLM记录每天都要整理！
3. 做PPT & 演示视频：录屏展示实时效果，对比优化前后数据。	全员
⚠️ 保命须知
每日站会：每天花10分钟同步进度，遇到问题立刻在群里讨论。

Git管理：用GitHub或Gitee管理代码，避免版本混乱。

LLM是你导师：所有代码问题、概念问题，先问DeepSeek等LLM，并自动记录Prompt和回答，报告里直接贴。

抓大放小：如果“矩形识别”在HLS里实在搞不定，就果断改用PS端（Python）处理，功能完整比纯硬件实现更重要。

兄弟，照这个计划干，绝对没问题！需要任何具体代码（比如Sobel的HLS代码怎么写）随时喊我！冲！
